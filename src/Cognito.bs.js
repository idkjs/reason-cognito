// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Js_mapperRt = require("bs-platform/lib/js/js_mapperRt.js");
var AmazonCognitoIdentityJs = require("amazon-cognito-identity-js");

((require('isomorphic-fetch')));

function makeCognitoClient(config) {
  return new AmazonCognitoIdentityJs.CognitoUserPool(config);
}

var jsMapperConstantArray = /* array */[
  /* tuple */[
    -530139339,
    "UserNotFoundException"
  ],
  /* tuple */[
    359869661,
    "InvalidPasswordException"
  ]
];

function cognitoErrorCodesToJs(param) {
  return Js_mapperRt.binarySearch(2, param, jsMapperConstantArray);
}

function cognitoErrorCodesFromJs(param) {
  return Js_mapperRt.revSearch(2, jsMapperConstantArray, param);
}

function signUp(client, username, password, attributes, validationData, param) {
  return new Promise((function (resolve, reject) {
                var callback = function (err$1, data) {
                  var match = err[/* code */0];
                  if (match !== 359869661) {
                    console.log("Unknown Error", err[/* message */1]);
                  } else {
                    console.log("INVALID PASSWORD", err[/* message */1]);
                  }
                  console.log("DATA", data);
                  return /* () */0;
                };
                var func = function (param, param$1, param$2, param$3) {
                  client.signUp(username, password, param !== undefined ? Caml_option.valFromOption(param) : undefined, param$1 !== undefined ? Caml_option.valFromOption(param$1) : undefined, param$2);
                  return /* () */0;
                };
                if (attributes !== undefined) {
                  var attributes$1 = attributes;
                  if (validationData !== undefined) {
                    var partial_arg = validationData;
                    var partial_arg$1 = attributes$1;
                    ((function (param) {
                            return func(partial_arg$1, partial_arg, callback, param);
                          })(/* () */0));
                  } else {
                    var partial_arg$2 = attributes$1;
                    ((function (param) {
                            return func(partial_arg$2, undefined, callback, param);
                          })(/* () */0));
                  }
                } else if (validationData !== undefined) {
                  var partial_arg$3 = validationData;
                  ((function (param) {
                          return func(undefined, partial_arg$3, callback, param);
                        })(/* () */0));
                } else {
                  func(undefined, undefined, callback, /* () */0);
                }
                return /* () */0;
              }));
}

exports.makeCognitoClient = makeCognitoClient;
exports.cognitoErrorCodesToJs = cognitoErrorCodesToJs;
exports.cognitoErrorCodesFromJs = cognitoErrorCodesFromJs;
exports.signUp = signUp;
/*  Not a pure module */
